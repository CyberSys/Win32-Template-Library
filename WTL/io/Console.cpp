//////////////////////////////////////////////////////////////////////////////////////////
//! \file wtl\io\Console.cpp
//! \brief Provides debug console and logfile
//! \date 7 March 2015
//! \author Nick Crowley
//! \copyright © Nick Crowley. All rights reserved.
//////////////////////////////////////////////////////////////////////////////////////////
#include "Console.hpp"
#include <wtl/utils/CharArray.hpp>
#include <wtl/utils/Encoding.hpp>
#include <wtl/utils/Iterator.hpp>

//! \namespace wtl - Windows template library
namespace wtl
{
  //! \var cdebug - Debug output
  Console cdebug;


  //////////////////////////////////////////////////////////////////////////////////////////
  // Console::flush 
  //! Flushes the log-file output to disc
  //////////////////////////////////////////////////////////////////////////////////////////
  void Console::flush()
  {
    // Flush log-file
    //logFile.flush();
  }

  //////////////////////////////////////////////////////////////////////////////////////////
  // Console::log
  //! Write string to log with current attributes
  //! 
  //! \param[in] *str - String
  //////////////////////////////////////////////////////////////////////////////////////////
  void Console::log(const char* str)
  {
    // Write to log-file
    //logFile.write(str, getAttributes());
  }
  

  //////////////////////////////////////////////////////////////////////////////////////////
  // wtl::operator <<
  //! Prints a wide-char string to the debug console
  //! 
  //! \param[in,out] &c - Debugging console
  //! \param[in] const *str - Null-terminated string
  //! \return Console& - Reference to 'c'
  //////////////////////////////////////////////////////////////////////////////////////////
  Console& operator << (Console& c, const wchar_t* str)
  { 
    // Convert into a fixed length buffer
    return c << CharArray<Encoding::ANSI,2048>(str).c_str();
  }
  
}



