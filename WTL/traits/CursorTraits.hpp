//////////////////////////////////////////////////////////////////////////////////////////
//! \file wtl\traits\CursorTraits.hpp
//! \brief Defines cursor traits 
//! \date 6 March 2015
//! \author Nick Crowley
//! \copyright Nick Crowley. All rights reserved.
//////////////////////////////////////////////////////////////////////////////////////////
#ifndef WTL_CURSOR_TRAITS_HPP
#define WTL_CURSOR_TRAITS_HPP

#include "wtl/WTL.hpp"
#include "wtl/utils/Handle.hpp"               //!< Handle

//! \namespace wtl - Windows template library
namespace wtl
{
  
  /////////////////////////////////////////////////////////////////////////////////////////
  //! \struct handle_alloc<HCURSOR> - Encapsulates menu handle allocation
  /////////////////////////////////////////////////////////////////////////////////////////
  //template <>
  //struct handle_alloc<HCURSOR>
  //{
  //  //! \var npos - Invalid handle sentinel value
  //  static const HCURSOR npos; 

  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  // handle_alloc<HCURSOR>::create
  //  //! Load cursor from resource
  //  //! 
  //  //! \tparam ENC - Character encoding 
  //  //! 
  //  //! \param[in] instance - Instance containing cursor
  //  //! \param[in] ident - Cursor identifier
  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  template <Encoding ENC>
  //  static HCURSOR create(HINSTANCE instance, ResourceId<ENC> ident) 
  //  { 
  //    return getFunc<ENC>(::LoadCursorA,::LoadCursorW)(instance, ident); 
  //  }
  //  
  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  // handle_alloc<HCURSOR>::create
  //  //! Load cursor from system resource
  //  //! 
  //  //! \tparam ENC - Character encoding 
  //  //! 
  //  //! \param[in] ident - System cursor identifier
  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  template <Encoding ENC = Encoding::UTF16>
  //  static HCURSOR create(SystemCursor ident) 
  //  { 
  //    return getFunc<ENC>(::LoadCursorA,::LoadCursorW)(npos, ident); 
  //  }
  //  
  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  // handle_alloc<HCURSOR>::clone
  //  //! Clone handle
  //  //! 
  //  //! \param[in] cursor - Cursor handle
  //  //! \return HCURSOR - Duplicate of handle
  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  static HCURSOR clone(HCURSOR menu);

  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  // handle_alloc<HCURSOR>::destroy noexcept
  //  //! Release handle
  //  //! 
  //  //! \param[in] cursor - Cursor handle
  //  //! \return bool - True iff closed successfully
  //  /////////////////////////////////////////////////////////////////////////////////////////
  //  static bool destroy(HCURSOR menu) noexcept
  //  {
  //    // no-op
  //    return true;
  //  }
  //};


  //! \alias HCursor - Shared cursor handle
  using HCursor = Handle<::HCURSOR>;
 
  /////////////////////////////////////////////////////////////////////////////////////////
  //! \struct default_t<HCursor> - Define default cursor handle
  /////////////////////////////////////////////////////////////////////////////////////////
  //template <> struct default_t<HCursor> : reference_constant<HCursor,HCursor::npos> {}; 
  
} //namespace wtl
#endif // WTL_CURSOR_TRAITS_HPP

